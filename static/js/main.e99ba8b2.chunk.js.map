{"version":3,"sources":["logic/todos.js","redux/reducers.js","redux/store.js","components/Header/logo.png","components/Header/index.js","components/ItemCreator/index.js","components/ItemsList/index.js","components/ItemsFilter/index.js","app.js","index.js"],"names":["ADD_ITEM","DELETE_ITEM","TOGGLE_COMPLETE","initialState","items","id","content","completed","reducer","state","action","type","nextId","reduce","item","Math","max","newItem","filter","el","todo","find","t","createReducer","combineReducers","todos","composeEnhancers","compose","configureStore","createStore","applyMiddleware","Header","className","src","logo","alt","connect","dispatch","onAdd","inputField","ref","input","placeholder","value","onClick","onDelete","deleteItem","onToggleComplete","toggleComplete","showCompleted","itemsToDisplay","length","class","map","checked","onChange","ItemsFilter","updateShowCompleted","htmlFor","store","App","useState","setShowCompleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e99ba8b2.chunk.js","sourcesContent":["export const ADD_ITEM = 'qgo/assessment/ADD_ITEM';\n\n/// new code\nexport const DELETE_ITEM = 'qgo/assessment/DELETE_ITEM';\n\n/// new code\nexport const TOGGLE_COMPLETE = 'qgo/assessment/TOGGLE_COMPLETE';\n\nexport const addItem = (content) => {\n  return { type: ADD_ITEM, content };\n};\n\n/// new code\nexport const deleteItem = (id) => {\n  return { type: DELETE_ITEM, id };\n};\n\n/// new code\nexport const toggleComplete = (id) => {\n  return { type: TOGGLE_COMPLETE, id };\n};\n\n/// completed attribute added\nexport const initialState = {\n  items: [\n    { id: 1, content: 'Call mum', completed: false },\n    { id: 2, content: 'Buy cat food', completed: false },\n    { id: 3, content: 'Water the plants', completed: true },\n  ],\n};\n\nconst reducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case ADD_ITEM:\n      const nextId =\n        state.items.reduce((id, item) => Math.max(item.id, id), 0) + 1;\n      const newItem = {\n        id: nextId,\n        content: action.content,\n        completed: false,\n      };\n\n      return {\n        ...state,\n        items: [...state.items, newItem],\n      };\n\n    /// new code\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: [...state.items.filter((el) => el.id !== action.id)],\n      };\n\n    /// new code\n    case TOGGLE_COMPLETE:\n      const todo = state.items.find((t) => t.id === action.id);\n      todo.completed = !todo.completed;\n      return { ...state, items: [...state.items] };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport reducer from '../logic/todos';\n\nexport default function createReducer() {\n  return combineReducers({\n    todos: reducer,\n  });\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createReducer from './reducers';\n\nconst composeEnhancers =\n  (process.env.NODE_ENV !== 'production' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst configureStore = (initialState = {}) => {\n  return createStore(\n    createReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware()),\n  );\n};\n\nexport default configureStore;\n","export default __webpack_public_path__ + \"static/media/logo.a0a9e70a.png\";","import React from 'react';\nimport logo from './logo.png';\nimport './styles.css';\n\nconst Header = () => {\n  return (\n    <div className=\"header-title\">\n      <img src={logo} className=\"header-logo\" alt=\"logo\" />\n      <h2>QGo Desktop React Assessment</h2>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../logic/todos';\nimport './styles.css';\n\nexport const ItemCreator = ({ onAdd }) => {\n  let inputField;\n\n  return (\n    <div className=\"itemCreator\">\n      <input\n        ref={(input) => {\n          inputField = input;\n        }}\n        className=\"itemCreator-input\"\n        type=\"text\"\n        placeholder=\"What do you need to do?\"\n      />\n      <input\n        className=\"itemCreator-button\"\n        type=\"button\"\n        value=\"Add Task\"\n        onClick={() => {\n          inputField.value && onAdd(inputField.value);\n          inputField.value = '';\n        }}\n      />\n    </div>\n  );\n};\n\nItemCreator.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (newItem) => dispatch(addItem(newItem)),\n});\n\nexport default connect(null, mapDispatchToProps)(ItemCreator);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteItem, toggleComplete } from '../../logic/todos';\nimport './styles.css';\n\nexport const ItemsList = ({\n  showCompleted,\n  items,\n  onDelete,\n  onToggleComplete,\n}) => {\n  let itemsToDisplay = items.filter((item) => !item.completed);\n\n  if (showCompleted) {\n    itemsToDisplay = items;\n  }\n\n  return (\n    <div>\n      {itemsToDisplay.length < 1 && <p>Add some tasks :-)</p>}\n\n      <table class=\"center\">\n        <tbody>\n          {itemsToDisplay.map((item) => (\n            <tr>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={item.completed}\n                  onChange={() => {\n                    onToggleComplete(item.id);\n                  }}\n                />\n              </td>\n              <td>{item.content}</td>\n              <td>\n                <button\n                  onClick={() => {\n                    onDelete(item.id);\n                  }}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nItemsList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return { items: state.todos.items };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(deleteItem(id)),\n  onToggleComplete: (id) => dispatch(toggleComplete(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nexport const ItemsFilter = ({ showCompleted, updateShowCompleted }) => {\n  return (\n    <div>\n      <input\n        id=\"show-completed-filter\"\n        type=\"checkbox\"\n        checked={showCompleted}\n        onChange={() => updateShowCompleted()}\n      />\n      <label htmlFor=\"show-completed-filter\" className=\"label\">\n        Show completed items\n      </label>\n    </div>\n  );\n};\n\nItemsFilter.propTypes = {\n  showCompleted: PropTypes.bool.isRequired,\n  updateShowCompleted: PropTypes.func.isRequired,\n};\n\nexport default ItemsFilter;\n","import React, { useState } from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store';\nimport Header from './components/Header';\nimport ItemCreator from './components/ItemCreator';\nimport ItemsList from './components/ItemsList';\nimport ItemsFilter from './components/ItemsFilter';\nimport './app.css';\n\nconst store = configureStore();\n\nfunction App() {\n  const [showCompleted, setShowCompleted] = useState(true);\n\n  function updateShowCompleted() {\n    setShowCompleted(!showCompleted);\n  }\n\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <Header />\n        <ItemCreator />\n        <ItemsFilter\n          showCompleted={showCompleted}\n          updateShowCompleted={updateShowCompleted}\n        />\n        <ItemsList showCompleted={showCompleted} />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}